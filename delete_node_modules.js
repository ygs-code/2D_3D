// /*
//  * @Date: 2022-05-11 11:23:58
//  * @Author: Yao guan shou
//  * @LastEditors: Yao guan shou
//  * @LastEditTime: 2022-05-11 11:44:42
//  * @FilePath: /webpack-cli/delete_node_modules.js
//  * @Description:
//  */
var fs = require("fs");
var path = require("path");
const { rimraf, rimrafSync, native, nativeSync } = require('rimraf')

const { readdirSync, stat } = fs;
var deleteFile = function (src, callbak) {
    let paths = readdirSync(src); //同步读取当前⽬录
    paths.forEach(function (path) {
        var _src = src + "/" + path;
        stat(_src, async function (err, stats) {
            //stats 该对象包含⽂件属性
            if (err) {
                console.log("err===", err);
                return;
            }
            if (stats.isFile()) {
                await new Promise((resolve, reject) => {
                    fs.unlink(_src, function (err) {
                        if (err) {
                            console.log("err===", err);
                            resolve();
                            return;
                        }
                        console.log("文件: " + _src + " 删除成功！");
                        resolve();
                    });
                });
            } else if (stats.isDirectory()) {
                // callbak(_src, path, callbak);
                // fs.rmdir( path, options, callback )
                deleteFile(_src, callbak);
            }
        });
    });
};

const readDirectoryFile = ({
    src,
    isFileCallbak = () => { },
    isNodeModulesDirectoryCallbak = () => { }
}) => {
    let paths = readdirSync(src); //同步读取当前⽬录
   
    paths.forEach(function (path) {
        var _src = src + "/" + path;
        stat(_src, function (err, stats) {
            //stats 该对象包含⽂件属性
            if (err) {
                
                return;
            }
            if (stats.isFile()) {
                isFileCallbak({
                    src: _src,
                    isFileCallbak,
                    isNodeModulesDirectoryCallbak
                });
                // fs.unlink(_src, function (err) {
                //   if (err) {
                //     console.log("err===", err);
                //     return;
                //   }
                //   console.log("文件:" + _src + "删除成功！");
                // });
            } else if (stats.isDirectory()) {
                // callbak(_src, path, callbak);
                // fs.rmdir( path, options, callback )
                if (_src.indexOf("/node_modules") >= 0) {
                    // fs.rmdir(_src, (err) => {
                    //     if (err) {
                    //         console.log("err===", err);
                    //         return;
                    //     }
                    //     console.log("文件:" + _src + "删除成功！");
                    // })
                    isNodeModulesDirectoryCallbak({
                        src: _src,
                        isFileCallbak,
                        isNodeModulesDirectoryCallbak
                    });
                } else {
                    readDirectoryFile({
                        src: _src,
                        isFileCallbak,
                        isNodeModulesDirectoryCallbak
                    });
                }
            }
        });
    });
};

readDirectoryFile({
    src: "K:/",
    isFileCallbak: ({ src }) => {
        // console.log("src====", src);
    },
    isNodeModulesDirectoryCallbak: ({ src }) => {
        // console.log("src====", src);
        // 删除目录下文件
        deleteFile(src);

        // // rimraf(src) 
        // rimraf.windows(src)
        // console.log("目录: " + src + " 删除成功！");


        // // // 删除目录
        // fs.rmdir(src, (err) => {
        //     if (err) {
        //         console.log("err===", err);
        //         return;
        //     }
        //     console.log("目录: " + src + " 删除成功！");
        // })

        // readDirectoryFile({
        //   src: _src,
        //   isFileCallbak,
        //   isDirectoryCallbak
        // });
    }
});

// deleteFile(
//   path.join(process.cwd(), "/node_modules"), // 需要删除的文件夹
//   (_src, path, callbak) => {
//     // if (path == "node_modules") {
//     //   // console.log("_src=", _src);
//     //   rm(_src, () => {
//     //     console.log("成功删除文件夹:", _src);
//     //   });
//     // } else {
//     //   deleteFile(_src, callbak);
//     // }
//   }
// );
